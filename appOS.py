import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sksurv.ensemble import RandomSurvivalForest
from sksurv.util import Surv

#dev=pd.read_csv('D:/python/app/web.csv')
dev=pd.DataFrame({
 'AFP200': [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
 'macrovesel': [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
 'Cirrhosis': [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0],
 'bleeding': [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 'shuxue': [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
 'tumornumber': [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0],
 'Vascularinvasion': [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0],
 'CSS_status': ['Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive'],
 'Survival months': [13.3, 125.2, 131.7, 1.8, 10.1, 3.1, 3.6, 21.0, 29.1, 5.3, 2.0, 46.6, 1.5, 42.1, 26.8, 8.1, 2.8, 101.0, 42.4, 2.8, 4.1, 6.2, 5.8, 8.3, 2.2, 2.3, 28.3, 66.6, 15.9, 66.1, 17.0, 3.5, 2.3, 1.6, 95.3, 0.8, 5.8, 39.2, 4.6, 2.2, 5.3, 8.4, 3.4, 35.2, 4.1, 3.6, 13.8, 52.6, 4.1, 142.7, 55.6, 119.3, 108.6, 3.8, 1.8, 23.8, 25.9, 106.6, 83.8, 129.0, 35.4, 54.1, 8.4, 103.3, 102.9, 5.4, 15.6, 6.9, 64.1, 45.2, 2.7, 5.6, 99.8, 16.7, 2.3, 96.3, 1.6, 3.3, 22.1, 7.4, 40.5, 94.7, 6.1, 93.7, 14.4, 93.5, 9.9, 23.0, 78.7, 40.7, 31.4, 52.8, 1.4, 11.4, 11.3, 2.4, 23.8, 10.2, 90.4, 36.8, 47.5, 63.9, 22.9, 126.1, 36.4, 80.6, 19.9, 1.2, 8.1, 87.6, 3.5, 46.3, 5.7, 50.8, 1.6, 41.8, 1.0, 24.2, 3.1, 17.2, 1.5, 1.0, 11.0, 8.4, 26.0, 31.6, 35.9, 30.4, 95.5, 71.4, 29.9, 4.9, 22.9, 28.6, 1.6, 5.4, 38.6, 4.0, 13.7, 23.9, 31.6, 36.9, 6.3, 13.8, 3.9, 20.6, 12.3, 4.2, 1.6, 73.0, 1.0, 1.1, 23.9, 48.4, 2.7, 3.4, 6.7, 107.7, 5.7, 22.1, 1.5, 59.5, 12.4, 11.5, 1.0, 83.9, 2.5, 65.2, 11.6, 35.9, 81.8, 3.1, 25.3, 72.5, 1.6, 2.1, 64.4, 63.9, 2.6, 5.4, 11.5, 2.6, 2.0, 2.6, 6.6, 56.9, 45.6, 1.4, 67.1, 3.7, 21.8, 27.0, 84.3, 0.8, 91.1, 45.6, 20.3, 37.3, 1.9, 56.6, 0.8, 20.7, 49.6, 39.0, 2.2, 55.0, 3.9, 5.1, 2.2, 41.7, 24.4, 89.2, 51.1, 44.0, 51.4, 1.8, 47.5, 49.2, 16.7, 37.5, 6.6, 10.0, 48.2, 48.3, 82.9, 84.1, 0.8, 46.8, 39.9, 22.0, 35.7, 65.4, 43.6, 5.9, 45.8, 3.7, 45.7, 23.3, 40.3, 19.3, 81.5, 29.1, 43.7, 63.8, 56.8, 1.3, 42.0, 3.3, 41.6, 41.6, 41.5, 2.2, 40.6, 40.3, 12.5, 2.7, 72.9, 14.6, 17.4, 35.3, 15.1, 34.6, 13.5, 71.3, 58.6, 40.3, 9.7, 5.9, 32.6, 61.7, 62.6, 5.3, 68.3, 1.8, 31.2, 64.9, 30.9, 20.7, 30.9, 4.7, 1.1, 30.7, 30.5, 1.9, 24.7, 30.0, 1.1, 57.7, 10.8, 28.3, 28.4, 5.5, 24.2, 5.7, 16.5, 63.4, 3.5, 22.4, 1.0, 60.5, 11.8, 38.6, 26.3, 26.2, 62.4, 58.2, 2.8, 6.7, 5.8, 13.0, 6.2, 7.8, 19.0, 60.1, 52.7, 46.0, 22.2, 22.1, 5.7, 1.4, 57.9, 20.1, 50.2, 52.0, 52.5, 4.5, 18.9, 23.7, 4.6, 18.2, 48.2, 39.4, 17.5, 17.1, 2.5, 54.4, 52.4, 11.4, 50.5, 16.3, 16.3, 5.4, 29.0, 16.1, 8.6, 15.7, 15.9, 1.1, 15.2, 36.1, 14.9, 2.8, 14.3, 1.8, 14.3, 25.3, 48.5, 7.4, 3.6, 3.8, 13.2, 13.1, 33.3, 13.0, 12.9, 10.6, 12.8, 22.7, 5.7, 47.8, 49.5, 1.8, 49.3, 12.0, 2.7, 11.5, 32.8, 30.6, 33.6, 11.3, 33.0, 48.5, 18.2, 14.4, 42.5, 10.9, 15.1, 28.1, 1.2, 1.6, 9.3, 42.1, 24.0, 44.9, 11.3, 31.0, 23.9, 9.0, 7.7, 44.3, 7.0, 14.2, 22.0, 4.5, 41.6, 5.9, 41.3, 23.1, 0.7, 5.2, 42.6, 1.1, 4.9, 3.3, 4.3, 41.3, 32.2, 30.9, 0.6, 29.7],
 'OS_status': ['Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Alive', 'Dead', 'Dead', 'Alive', 'Alive', 'Dead', 'Alive', 'Dead', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive', 'Alive'],
 'Survival monthss': [40.8, 125.2, 131.7, 2.4, 34.3, 29.0, 16.7, 37.3, 64.4, 22.4, 5.6, 57.6, 3.6, 47.6, 27.4, 38.5, 3.2, 101.0, 90.3, 7.8, 12.2, 12.2, 6.8, 21.4, 21.9, 2.8, 28.9, 66.6, 21.3, 66.1, 65.4, 3.6, 16.7, 8.4, 96.4, 2.8, 36.9, 68.5, 9.6, 6.0, 25.7, 10.7, 17.0, 49.0, 5.2, 4.4, 34.2, 109.3, 12.7, 142.7, 55.6, 119.3, 108.6, 13.6, 3.4, 28.9, 27.8, 106.6, 83.8, 129.0, 137.4, 103.6, 12.9, 103.3, 102.9, 86.6, 21.3, 23.0, 66.3, 47.4, 9.1, 11.8, 99.8, 67.2, 10.2, 96.3, 1.9, 4.1, 72.8, 44.9, 54.5, 94.7, 7.2, 93.7, 125.4, 93.5, 40.2, 61.6, 78.7, 44.4, 86.2, 112.6, 5.6, 38.8, 38.3, 11.1, 28.6, 121.2, 90.4, 36.8, 117.0, 90.0, 51.1, 126.9, 36.4, 88.6, 47.6, 3.1, 33.0, 87.6, 7.9, 122.1, 20.6, 86.4, 14.6, 85.4, 2.1, 121.1, 7.5, 115.9, 1.8, 3.8, 23.0, 29.8, 83.4, 33.7, 41.9, 30.4, 112.6, 78.9, 33.0, 13.9, 22.9, 34.6, 100.8, 23.1, 113.5, 19.8, 77.2, 23.9, 37.6, 107.6, 21.8, 42.0, 6.5, 32.3, 12.3, 21.6, 8.9, 73.0, 73.0, 2.7, 49.9, 100.4, 3.2, 7.5, 14.1, 107.7, 11.7, 24.3, 53.6, 59.5, 12.4, 67.5, 44.7, 95.3, 6.9, 65.2, 31.6, 48.9, 94.8, 12.4, 32.1, 95.2, 2.3, 18.4, 64.4, 63.9, 5.6, 6.4, 34.5, 18.0, 7.0, 26.1, 47.2, 56.9, 50.4, 5.9, 67.1, 8.5, 89.2, 60.1, 96.5, 18.5, 91.1, 93.5, 34.2, 83.6, 8.0, 56.6, 6.3, 57.1, 55.7, 39.1, 7.9, 66.6, 54.1, 5.1, 25.0, 80.4, 27.4, 89.2, 51.1, 44.8, 51.4, 8.9, 47.5, 49.2, 38.8, 44.5, 41.5, 13.1, 48.2, 48.3, 82.9, 84.1, 4.5, 46.8, 42.6, 49.8, 76.4, 71.1, 43.6, 7.6, 45.8, 27.7, 45.7, 51.6, 60.8, 44.4, 81.5, 43.1, 43.7, 79.7, 56.8, 10.9, 42.0, 4.8, 41.6, 41.6, 41.5, 3.7, 40.6, 40.3, 45.3, 9.7, 72.9, 20.1, 55.0, 35.3, 53.9, 34.6, 30.2, 71.3, 58.6, 61.5, 32.9, 49.8, 39.2, 65.7, 62.6, 7.4, 68.3, 31.1, 31.2, 64.9, 30.9, 30.9, 30.9, 30.8, 18.8, 30.7, 30.5, 13.1, 61.7, 30.0, 4.1, 57.7, 14.4, 28.3, 28.4, 64.9, 28.1, 14.7, 37.1, 63.4, 12.0, 27.5, 22.2, 60.5, 55.5, 42.8, 26.3, 26.2, 62.4, 58.2, 8.4, 43.9, 21.8, 26.0, 9.7, 7.8, 51.3, 60.1, 52.7, 59.1, 22.2, 22.1, 21.8, 14.9, 57.9, 20.1, 50.2, 52.0, 52.5, 18.9, 18.9, 54.0, 5.5, 18.2, 48.2, 50.0, 17.5, 17.1, 24.2, 54.4, 52.4, 44.6, 50.5, 16.3, 16.3, 16.1, 52.7, 16.1, 22.6, 15.7, 15.9, 3.1, 15.2, 36.1, 14.9, 52.1, 14.3, 11.9, 14.3, 41.2, 48.5, 40.0, 9.7, 4.8, 13.2, 13.1, 49.2, 13.0, 12.9, 50.1, 12.8, 49.0, 11.5, 47.8, 49.5, 12.3, 49.3, 12.0, 11.9, 11.5, 32.8, 44.4, 47.5, 11.3, 33.0, 48.5, 28.4, 20.7, 42.5, 10.9, 15.1, 28.1, 1.2, 12.0, 9.3, 42.1, 34.6, 44.9, 11.3, 31.2, 30.6, 18.3, 7.7, 44.3, 7.0, 14.2, 23.8, 9.5, 41.6, 5.9, 41.3, 35.1, 21.9, 5.2, 42.6, 18.7, 4.9, 12.0, 4.3, 41.3, 32.2, 30.9, 0.6, 29.7],
 'GLR': [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0],
 'differentation': [2, 0, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 0, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 0, 0, 1, 1, 1, 2, 1, 2, 0, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 2, 1, 0, 1, 1, 2, 1, 1, 1, 0, 1, 1, 2, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 1, 2, 0, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 0, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 0, 1, 1, 2, 1, 1, 2, 2, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 1, 2, 2, 2, 0, 2, 1, 2, 0, 2, 2, 1, 0, 1, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 0, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0, 1, 2, 2, 1, 1, 2, 0, 2, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 0, 0, 0, 2, 1, 2, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 0, 1, 2, 0, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 0, 1, 1, 1, 1, 2, 1, 1, 2, 0, 1, 0, 1, 1, 1, 1, 2, 0, 1, 1, 0, 1, 1, 2, 2, 2, 1, 2, 2, 1, 0, 2, 0, 1, 0, 1, 1, 0, 1, 2, 1, 1, 2, 1, 0, 2, 2, 1, 1, 2, 1, 1, 0, 0, 1, 0, 2, 1, 2, 1, 2, 1, 0, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 0, 1, 1, 1, 2, 1, 0, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2],
 'size': [1, 0, 1, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 2, 2, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 0, 2, 1, 0, 1, 1, 1, 1, 2, 2, 0, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 1, 0, 1, 0, 2, 1, 1, 1, 0, 1, 0, 1, 2, 1, 0, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 2, 1, 0, 2, 2, 2, 0, 1, 0, 0, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 2, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1],
})

# 不需要独热编码的自变量
num_cols = ['CSS_status', 'Survival months','OS_status','Survival monthss']
cat_cols = list(set(dev.columns)-set(num_cols))
# 分类变量处理
dev_dummy = pd.get_dummies(dev,drop_first=True,columns=cat_cols)
devx = dev_dummy.drop(columns=[ 'CSS_status', 'Survival months', 'OS_status','Survival monthss','Cirrhosis_1'])#这是因变量，可以调整，OS需要去掉肝硬化，主要OS时间是两个s
devy = dev_dummy.loc[:,['Survival monthss','OS_status']]# 整个数据集的因变量
devy['OS_status'] = devy['OS_status'] == 'Dead'
y_train = devy.rename(columns={'O_status':'event','Survival monthss':'time'})
# 训练集
X_train = devx
y_train_ = Surv.from_dataframe(
    event='event',
    time='time', 
    data=devy.rename(columns={'OS_status':'event','Survival monthss':'time'}))

st.sidebar.header('Option')  # 添加侧边栏的大标题
# 添加每个下拉选择框并为其设置小标题
afp_choice = st.sidebar.selectbox('AFP', options=['Normal', 'High'], index=0, help='选择AFP的状态')
glr_choice = st.sidebar.selectbox('GLR', options=['Low', 'High'], index=0, help='选择GLR的状态')
mvi_choice = st.sidebar.selectbox('MVI', options=['No', 'Yes'], index=0, help='选择MVI的状态')
size1_choice = st.sidebar.selectbox('Size 5-10cm', options=['No', 'Yes'], index=0, help='选择Size的状态')
grade1_choice = st.sidebar.selectbox('Moderate differentiation', options=['No', 'Yes'], index=0, help='选择 differentiation的状态')
size2_choice = st.sidebar.selectbox('Size >10cm', options=['No', 'Yes'], index=0, help='选择size的状态')
grade2_choice = st.sidebar.selectbox('Poor differentiation', options=['No', 'Yes'], index=0, help='选择 differentiation的状态')
mavi_choice = st.sidebar.selectbox('MaVI', options=['No', 'Yes'], index=0, help='选择Mavi的状态')
number_choice = st.sidebar.selectbox('Number', options=['No', 'Yes'], index=0, help='选择Number的状态')
shuxue_choice = st.sidebar.selectbox('Transfusion', options=['No', 'Yes'], index=0, help='选择Transfusion的状态')
bleeding_choice = st.sidebar.selectbox('Blood loss', options=['<500ml', '≥500ml'], index=0, help='选择Blood loss的状态')

# 主页面可以用来展示其他内容或基于侧边栏选择的结果
#st.write(f"You selected AFP as {afp_choice}, GLR as {glr_choice}, and MVI as {mvi_choice}.")
# 将所有选择结果合并为一行显示
#choices_summary = f"AFP: {afp_choice}, GLR: {glr_choice}, MVI: {mvi_choice}, Size 5-10cm: {size1_choice}, Moderate differentiation: {grade1_choice}, Size >10cm: {size2_choice}, Poor differentiation: {grade2_choice}, MaVI: {mavi_choice}, Cirrhosis: {ganyinghua_choice}, Number: {number_choice}, Transfusion: {shuxue_choice}, Blood loss: {bleeding_choice}"
# 显示选择结果摘要
#st.write("选择结果摘要:", choices_summary)
# 将选择转换为数值
afp_value = 0 if afp_choice == 'Normal' else 1
glr_value = 0 if glr_choice == 'Low' else 1
mvi_value = 0 if mvi_choice == 'No' else 1
size1_value = 0 if size1_choice == 'No' else 1
grade1_value = 0 if grade1_choice == 'No' else 1
size2_value = 0 if size2_choice == 'No' else 1
grade2_value = 0 if grade2_choice == 'No' else 1
mavi_value = 0 if mavi_choice == 'No' else 1
number_value = 0 if number_choice == 'No' else 1
shuxue_value = 0 if shuxue_choice == 'No' else 1
bleeding_value = 0 if bleeding_choice == '<500ml' else 1


vad = pd.DataFrame({'AFP200_1': [afp_value], 'GLR_1': [glr_value],'Vascularinvasion_1': [mvi_value], 'size_1': [size1_value],'differentation_1': [grade1_value], 'size_2': [size2_value], 'differentation_2': [grade2_value], 'macrovesel_1': [mavi_value], 'tumornumber_1': [number_value],'shuxue_1': [shuxue_value],'bleeding_1': [bleeding_value]})
#X_test = pd.get_dummies(vad,drop_first=True,columns=cat_cols)
#vad
X_test = vad

st.title('随机生存森林预测OS网页计算器')
RSF=RandomSurvivalForest(max_depth=8, min_samples_leaf=8, min_samples_split=4,n_estimators=200)
RSF.fit(X_train,y_train_)

# 指定的时间点，假设时间单位是月
va_times = [12, 36, 60]  # 对应于1年、3年、5年
run_button = st.button('运行预测')

if run_button:
    RSFtestsurv = RSF.predict_survival_function(X_test)
    # 初始化存储预测结果的列表
    RSFtestresult_1 = []
    RSFtestresult_3 = []
    RSFtestresult_5 = []
    # 循环遍历每个测试集病例的生存函数
    for func in RSFtestsurv:
        # 计算特定时间点的生存概率
        RSFtestresult_1year = func(va_times[0])  # 12月
        RSFtestresult_3year = func(va_times[1])  # 36月
        RSFtestresult_5year = func(va_times[2])  # 60月
        # 将结果添加到列表中
        RSFtestresult_1.append(RSFtestresult_1year)
        RSFtestresult_3.append(RSFtestresult_3year)
        RSFtestresult_5.append(RSFtestresult_5year)
    
    # 设置图形大小
    plt.figure(figsize=(9, 5))  # 在这里调整图形的大小
    # 使用Matplotlib绘制生存函数的图形
    for i, surv_func in enumerate(RSFtestsurv):
        time_points = np.arange(3, 87)  # 根据需要调整时间点
        plt.step(time_points, surv_func(time_points), where="post",
                 label=f"Sample {i + 1}")
    plt.ylabel("est. probability of survival $\hat{S}(t)$")
    plt.xlabel("time $t$")
    plt.legend(loc="best")
    st.pyplot(plt)  # 显示图形

    survival_probabilities_df = pd.DataFrame({
        '1 Year Survival Probability': RSFtestresult_1 ,
        '3 Years Survival Probability': RSFtestresult_3,
        '5 Years Survival Probability': RSFtestresult_5
    })
    # 使用Streamlit展示DataFrame
    
    # 将DataFrame转换为HTML，去掉索引并增加样式以调整字体大小和居中
    html = survival_probabilities_df.to_html(index=False, classes='table table-striped table-hover')

    # 使用Streamlit的Markdown功能展示带有HTML的DataFrame
    st.markdown(f"<style>.table {{font-size: 16px; text-align: center;}}</style>{html}", unsafe_allow_html=True)
